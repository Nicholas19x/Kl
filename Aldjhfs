local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Title of the library", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local AutofarmSettingTab = Window:MakeTab({
    Name = "Setting",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local AutofarmTab = Window:MakeTab({
    Name = "Auto farm",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local melee = game:GetService("Players").LocalPlayer.PlayerStats.FightingStyle
local sword = game:GetService("Players").LocalPlayer.PlayerStats.SwordName

AutofarmSettingTab:AddDropdown({
    Name = "Weapon",
    Default = "melee",
    Options = {"melee", "sword"},
    Callback = function(Value)
        if Value == "melee" and melee then
        elseif Value == "sword" and sword then
        end
    end    
})

function checklevel()
    local lv = game:GetService("Players").LocalPlayer.PlayerStats.lvl.Value
    if lv == 1 or lv <= 2000 then
        Mon = "Soldier [Lv. 1]"
        QuestName = "Kill 4 Soldiers"
    end
end

local function teleportToTarget(position)
    local player = game.Players.LocalPlayer
    local hrp = player.Character:FindFirstChild("HumanoidRootPart")

    if hrp then
        -- Teleport to the target position
        hrp.CFrame = position

        -- Create BodyGyro if not already present
        local bodyGyro = hrp:FindFirstChild("BodyGyro") or Instance.new("BodyGyro", hrp)
        
        bodyGyro.MaxTorque = Vector3.new(4000, 4000, 4000)
        bodyGyro.CFrame = position
        bodyGyro.P = 3000
        
        -- Ensure BodyGyro is not affected by physics
        bodyGyro.P = 0
    end
end

local function findNewTarget()
    for _, v in pairs(game:GetService("Workspace").Monster.Mon:GetChildren()) do
        if v.Name == Mon and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            return v
        end
    end
    return nil
end

spawn(function()
    while task.wait(0.1) do
        pcall(function()
            if _G.Auto_Farm then
                checklevel()
                if game:GetService("Players").LocalPlayer.PlayerGui.MainGui.QuestBoard.Visible == false then
                    if QuestName and QuestName ~= "" then
                        local args = {
                            [1] = "take",
                            [2] = QuestName
                        }
                        game:GetService("ReplicatedStorage").Chest.Remotes.Functions.Quest:InvokeServer(unpack(args))
                    end
                end
            end
        end)
    end
end)

spawn(function()
    local currentTarget = nil
    while task.wait(0.1) do
        if _G.Auto_Farm then
            if game:GetService("Players").LocalPlayer.PlayerGui.MainGui.QuestBoard.Visible == true then
                -- Update target if current target is nil or dead
                if not currentTarget or (currentTarget:FindFirstChild("Humanoid") and currentTarget.Humanoid.Health <= 0) then
                    currentTarget = findNewTarget()
                end

                -- Move to target if it's valid and alive
                if currentTarget and currentTarget:FindFirstChild("Humanoid") and currentTarget.Humanoid.Health > 0 then
                    -- Move to the position 2.5 times the height above the head
                    local heightAboveHead = currentTarget.HumanoidRootPart.Size.Y * 2.5
                    local targetPosition = currentTarget.HumanoidRootPart.CFrame * CFrame.new(0, heightAboveHead, 0)
                    teleportToTarget(targetPosition)
                end
            end
        end
    end
end)

AutofarmTab:AddToggle({
    Name = "Auto farm",
    Default = false,
    Callback = function(Value)
        _G.Auto_Farm = Value
    end    
})
