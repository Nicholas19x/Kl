local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Title of the library", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local AutofarmSettingTab = Window:MakeTab({
    Name = "Setting",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local AutofarmTab = Window:MakeTab({
    Name = "Auto farm",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local TeleportTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
    vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
end)


local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local melee = player.PlayerStats.FightingStyle.Value
local sword = player.PlayerStats.SwordName.Value
local Weapon = "FS_" .. melee .. "_M1"
local SwordWeapon = "SW_" .. sword .. "_M1"
local Weaponz = "FS_" .. melee .. "_Z"
local Weaponx = "FS_" .. melee .. "_X"
local Weaponc = "FS_" .. melee .. "_C"
local Weaponv = "FS_" .. melee .. "_V"
local SwordWeaponz = "SW_" .. sword .. "_Z"
local SwordWeaponx = "SW_" .. sword .. "_X"
local SwordWeaponc = "SW_" .. sword .. "_C"
local SwordWeaponv = "SW_" .. sword .. "_V"


spawn(function()
    while wait(1) do
        if _G.Auto_Farm then
            pcall(function()
                local tool = player.Backpack:FindFirstChild(sword)
                if tool then
                    player.Character.Humanoid:EquipTool(tool)
                end
            end)
        end
    end
end)

spawn(function()
    while task.wait(0.25) do
        pcall(function()
            if _G.Auto_Farm then
                local args = { [1] = Weapon }
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(0.25) do
        pcall(function()
            if _G.Auto_Farm then
                local args = { [1] = SwordWeapon }
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillz then
                local args = { [1] = Weaponz,
 [2] = { ["Type"] = "Down",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillz then
                local args = { [1] = Weaponz,
 [2] = { ["Type"] = "Up",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillz then
                local args = { [1] = SwordWeaponz,
 [2] = { ["Type"] = "Down",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillz then
                local args = { [1] = SwordWeaponz,
 [2] = { ["Type"] = "Up",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillx then
                local args = { [1] = Weaponx,
 [2] = { ["Type"] = "Down",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillx then
                local args = { [1] = Weaponx,
 [2] = { ["Type"] = "Up",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillx then
                local args = { [1] = SwordWeaponx,
 [2] = { ["Type"] = "Down",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillx then
                local args = { [1] = SwordWeaponx,
 [2] = { ["Type"] = "Up",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillc then
                local args = { [1] = Weaponc,
 [2] = { ["Type"] = "Down",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillc then
                local args = { [1] = Weaponc,
 [2] = { ["Type"] = "Up",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillv then
                local args = { [1] = Weaponv,
 [2] = { ["Type"] = "Down",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

spawn(function()
    while task.wait(3) do
        pcall(function()
            if Skillv then
                local args = { [1] = Weaponv,
 [2] = { ["Type"] = "Up",
         ["MouseHit"] = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
}
}
                ReplicatedStorage.Chest.Remotes.Functions.SkillAction:InvokeServer(unpack(args))
            end
        end)
    end
end)

local Section = AutofarmSettingTab:AddSection({
	Name = "Skill"
})

AutofarmSettingTab:AddToggle({
	Name = "Z",
	Default = false,
	Callback = function(Value)
		Skillz = Value
	end    
})

AutofarmSettingTab:AddToggle({
	Name = "X",
	Default = false,
	Callback = function(Value)
		Skillx = Value
	end    
})

AutofarmSettingTab:AddToggle({
	Name = "C",
	Default = false,
	Callback = function(Value)
		Skillc = Value
	end    
})

AutofarmSettingTab:AddToggle({
	Name = "V",
	Default = false,
	Callback = function(Value)
		Skillv = Value
	end    
})

AutofarmSettingTab:AddTextbox({
    Name = "Distance",
    Default = "2.5",
    TextDisappear = true,
    Callback = function(Value)
        Distancehigh = tonumber(Value)
    end    
})

function checklevel()
    local lv = game:GetService("Players").LocalPlayer.PlayerStats.lvl.Value
    if lv <= 9 then
        Mon = "Soldier [Lv. 1]"
        QuestName = "Kill 4 Soldiers"
        Monisland = Vector3.new(-2091, 300, -4615)
    elseif lv <= 11 then
        Mon = "High-class Soldier [Lv. 1050]"
        QuestName = "Kill 4 High-class Soldier"
        Monisland = Vector3.new(-1001, 300, -4615)
    elseif lv <= 9999 then
        Mon = "Naval personnel [Lv. 1200]"
        QuestName = "Kill 4 Naval personnel"
        Monisland = Vector3.new(-1211, 300,2193)
    else
        Mon = nil
        QuestName = nil
        Monisland = nil
    end
end

local function teleportToTarget(position)
    local player = game.Players.LocalPlayer
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

    if hrp then
        hrp.CFrame = position
    end
end

local function teleportmonisland(position)
    local player = game.Players.LocalPlayer
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

    if hrp and position then
        hrp.CFrame = CFrame.new(position)
    end
end

local function findNewTarget()
    local foundmonster = false
    local monsters = game:GetService("Workspace").Monster.Mon:GetChildren()

    for _, v in pairs(monsters) do
        if v.Name == Mon and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            foundmonster = true
            return v
        end
    end

    if not foundmonster then
        if Monisland then
            teleportmonisland(Monisland)
        end
    end

    return nil
end


local function setPlayerToLyingPosition()
    local player = game.Players.LocalPlayer
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")

    if hrp and humanoid then
        humanoid.PlatformStand = true

        hrp.CFrame = hrp.CFrame * CFrame.Angles(math.rad(-90), 0, 0)

        local existingGyro = hrp:FindFirstChild("BodyGyro")
        if existingGyro then existingGyro:Destroy() end

        local existingPosition = hrp:FindFirstChild("BodyPosition")
        if existingPosition then existingPosition:Destroy() end

        local bodyGyro = Instance.new("BodyGyro")
        bodyGyro.Parent = hrp
        bodyGyro.CFrame = hrp.CFrame
        bodyGyro.MaxTorque = Vector3.new(4000, 4000, 4000)
        bodyGyro.P = 10000
        bodyGyro.D = 1000

        local bodyPosition = Instance.new("BodyPosition")
        bodyPosition.Parent = hrp
        bodyPosition.Position = hrp.Position
        bodyPosition.MaxForce = Vector3.new(4000, 4000, 4000)
        bodyPosition.P = 10000
        bodyPosition.D = 1000
    end
end

spawn(function()
    while task.wait(0.1) do
        pcall(function()
            if _G.Auto_Farm then
                checklevel()
                if game:GetService("Players").LocalPlayer.PlayerGui.MainGui.QuestBoard.Visible == false then
                    if QuestName and QuestName ~= "" then
                        local args = {
                            [1] = "take",
                            [2] = QuestName
                        }
                        pcall(function()
                            game:GetService("ReplicatedStorage").Chest.Remotes.Functions.Quest:InvokeServer(unpack(args))
                        end)
                    end
                end
            end
        end)
    end
end)

spawn(function()
    local currentTarget = nil
    while task.wait(0.1) do
        if _G.Auto_Farm then
            if game:GetService("Players").LocalPlayer.PlayerGui.MainGui.QuestBoard.Visible == true then
                if not currentTarget or (currentTarget:FindFirstChild("Humanoid") and currentTarget.Humanoid.Health <= 0) then
                    currentTarget = findNewTarget()
                end

                if currentTarget and currentTarget:FindFirstChild("Humanoid") and currentTarget.Humanoid.Health > 0 then
                    local heightAboveHead = currentTarget.HumanoidRootPart.Size.Y * (Distancehigh or 2.5)
                    local targetPosition = currentTarget.HumanoidRootPart.CFrame * CFrame.new(0, heightAboveHead, 0)
                    teleportToTarget(targetPosition)

                    setPlayerToLyingPosition()
                end
            end
        end
    end
end)

AutofarmTab:AddToggle({
    Name = "Auto farm",
    Default = false,
    Callback = function(Value)
        _G.Auto_Farm = Value

        local player = game.Players.LocalPlayer
        local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

        if not _G.Auto_Farm then
            if hrp then
                local existingGyro = hrp:FindFirstChild("BodyGyro")
                if existingGyro then existingGyro:Destroy() end

                local existingPosition = hrp:FindFirstChild("BodyPosition")
                if existingPosition then existingPosition:Destroy() end

                local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.PlatformStand = false
                end
            end
        end
    end    
})

local teleportPositions = {
    StarterIsland = Vector3.new(-2091, 300, -4615),
    SoldierIsland = Vector3.new(-2359, 300, -2597),
    Bubble        = Vector3.new(1660, 300, 878),
    ChefShip      = Vector3.new(-4226, 300, -2895),
    Fishland      = Vector3.new(-1706, 100, 6395),
    LobbyIsland   = Vector3.new(-1211, 300,2193)
}

local function teleportToPosition(islandName)
    local player = game:GetService("Players").LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    
    local position = teleportPositions[islandName]
    if position then
        humanoidRootPart.CFrame = CFrame.new(position)
    end
end

local function createButtonsForIslands()
    local areas = game:GetService("Workspace"):FindFirstChild("Areas")
    if not areas then
        return
    end

    local areaChildren = areas:GetChildren()
    
    for _, area in pairs(areaChildren) do
        local islandName = area.Name
        if teleportPositions[islandName] then
            local buttonName = "Go to " .. islandName
            local callback = function()
                teleportToPosition(islandName)
            end
            
            if TeleportTab and TeleportTab.AddButton then
                TeleportTab:AddButton({
                    Name = buttonName,
                    Callback = callback
                })
            end
        end
    end
end

createButtonsForIslands()
